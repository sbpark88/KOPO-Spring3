<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="tv" class="polymorphism.LgTV" init-method="initMethod" destroy-method="destroyMethod" scope="">	<!-- scope는 생략하면 default로 singleton이 설정된다. 매번 객체 생성은 prototype --> 
		<constructor-arg index="0" ref="elac"></constructor-arg>	<!-- 이 시점에 객체가 생성되므로 ElacSpeaker 객체의 lazy-init이 실행된다. -->
		<constructor-arg index="1" value="3000000"></constructor-arg>	 <!-- 이 argument는 객체가 아니므로 그냥 값만 전달한다. 위는 ref가 elac 객체를 생성해서 argument로 넣는 것과 구분해야한다. -->
		<property name="speaker" ref="elac"></property>		<!-- 기본적으로 singleton pattern이 적용되므로 객체는 새로 생성하지 않는다. name은 setter의 parameter를 보고 찾아가는 것이 아니라 setOOO에서 set을 뗀 'OOO'를 찾아간다. -->
		<property name="price" value="5000000"></property>	<!-- constructor보다 늦게 실행되므로 setter injection에서 넣은 값이 최종 값이 된다. constructor-arg보다 아래 있어서가 아님! -->
	</bean>
	<bean id="secondTv" class="polymorphism.SamsungTV" init-method="initMethod" destroy-method="destroyMethod" lazy-init="true"></bean>
	
	<bean id="elac" class="polymorphism.ElacSpeaker" lazy-init="true"></bean>
</beans>
